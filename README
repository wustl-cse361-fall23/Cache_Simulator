
Cache simulator that takes in the given cache configuration and a valgrind tracefile. It returns hit_count, miss_count, eviction_count,
dirty_bytes_evicted, dirty_bytes_active, and double_references.

After compiling, run test-csim to load up and execute simulation on the trace files found in the traces subdirectory.

******
Files:
******

# You will modifying and handing in these two files
csim.c       Your cache simulator
trans.c      Your transpose function

# Tools for evaluating simulator and transpose function
Makefile     Builds the simulator and tools
README       This file
driver.py*   The driver program, runs test-csim and test-trans
cachelab.c   Required helper functions
cachelab.h   Required header file
csim-ref*    The executable reference cache simulator
test-csim*   Tests your cache simulator
test-trans.c Tests your transpose function
tracegen.c   Helper program used by test-trans
traces/      Trace files used by test-csim.c
